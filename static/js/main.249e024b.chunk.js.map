{"version":3,"sources":["constants.js","NavBar.js","About.js","Books.js","Book.js","MainRouter.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","NavBar","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","About","Books","useRouteMatch","useState","books","setBooks","useEffect","fetch","then","res","json","result","error","bookShelf","map","book","Card","style","width","Body","Title","name","Text","description","to","pathname","slug","state","length","Book","useParams","location","useLocation","chapter","currentChapter","setCurrentChapter","mybook","setMybook","edit","setEdit","EditorState","createEmpty","content","setContent","pr","git","currentFile","setCurrentFile","gitLocation","entry","updateContent","bookTOC","defaultActiveKey","c","createWithContent","ContentState","createFromBlockArray","convertFromHTML","textToClipboard","text","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","onClick","authors","dangerouslySetInnerHTML","__html","editorState","wrapperClassName","editorClassName","onEditorStateChange","rawContentState","convertToRaw","getCurrentContent","markup","draftToHtml","newObject","JSON","stringify","window","MainRouter","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.249e024b.chunk.js","sourcesContent":["export const bookShelfAPI = 'https://raw.githubusercontent.com/dineshgudibandi/book-shelf/main/book-shelf.json';\nexport const baseUrl = '/book-shelf';","import { Nav, Navbar, Form,FormControl,Button   } from 'react-bootstrap';\nimport {baseUrl} from './constants';\nconst NavBar = () => {\n      return  (\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Library</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href={`${baseUrl}/`}>Home</Nav.Link>\n            <Nav.Link href={`${baseUrl}/books`}>Books</Nav.Link>\n            <Nav.Link href={`${baseUrl}/about`}>About</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-light\">Search</Button>\n          </Form>\n        </Navbar>)\n}\nexport default NavBar;","const About = () => {\n  return (<h2>About</h2>);\n}\nexport default About;","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { Card,Button } from 'react-bootstrap';\nimport { bookShelfAPI,baseUrl } from './constants';\nconst Books = () => {\n  let match = useRouteMatch();\n  const [books,setBooks] = useState([]);\nuseEffect(() => {\n\nfetch(bookShelfAPI)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setBooks(result);\n        },\n        (error) => {\n\n        }\n      )\n  },[]);\nconst bookShelf = books.map((book) =>\n        <Card style={{ width: '18rem' }} key={book.slug} >\n          <Card.Body>\n            <Card.Title>{book.name}</Card.Title>\n            <Card.Text>\n             {book.description}\n            </Card.Text>\n            <Button><Link to={{ pathname:`${baseUrl}/book/${book.slug}`, state:{book}}}>\n                                                Read\n                                                </Link></Button>\n          </Card.Body>\n        </Card>\n    );\n  return (\n    <div>\n      <h2>Books</h2>\n      {books.length > 0 && bookShelf}\n    </div>\n  );\n}\nexport default Books;","import { useState, useEffect } from 'react';\nimport parse from 'html-react-parser';\nimport {\n  useLocation,\n  useRouteMatch,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport { Nav } from 'react-bootstrap';\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport { Editor } from 'react-draft-wysiwyg';\nimport { convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport {baseUrl} from './constants';\nconst Book = () => {\n  const params = useParams();\n  const location = useLocation()\n  const book = location.state?.book;\n  const chapter = location.state?.chapter;\n  const [currentChapter,setCurrentChapter] = useState([]);\n  let match = useRouteMatch();\n   const [mybook,setMybook] = useState([]);\n   const [edit,setEdit] = useState(false);\n   const [ content,setContent]= useState(EditorState.createEmpty());\n   const [git,setGit]=useState(book.pr);\n   const [currentFile, setCurrentFile] = useState('');\n   const [gitLocation, setGitLocation] = useState(book.location);\n useEffect(() => {\n  if(book){\n     fetch(book.location+book.entry)\n       .then(res => res.json())\n       .then(\n         (result) => {\n           setMybook(result);\n               setCurrentFile(result[0].location);\n               fetch(gitLocation+result[0].location)\n                            .then(res => res.json())\n                            .then(\n                              (result) => {\n                                setCurrentChapter(result);\n                                 updateContent(result.content);\n                              },\n                              (error) => {\n\n                              }\n                            )\n         },\n         (error) => {\n\n         }\n       )\n       }\n   },[]);\n    useEffect(() => {\n             if(chapter){\n             setCurrentFile(chapter.location);\n             fetch(gitLocation+chapter.location)\n                 .then(res => res.json())\n                 .then(\n                   (result) => {\n                     setCurrentChapter(result);\n                      updateContent(result.content);\n                   },\n                   (error) => {\n\n                   }\n                 )\n                 }\n      },[chapter]);\n   const bookTOC = mybook.map((chapter) =>\n<Nav defaultActiveKey=\"#\" className=\"flex-column\" key={chapter.slug} >\n  <Link to={{ pathname:`${baseUrl}/book/${book.slug}/${chapter.slug}`, state:{chapter,book}}}>\n                                                                         {chapter.name}\n                                                                         </Link>\n</Nav>);\nconst toggleEdit = () => {\nsetEdit(!edit);\n}\nconst onEditorStateChange = (content) => {\n   setContent(content);\n}\nconst updateContent = (c) => {\nsetContent(EditorState.createWithContent(\n                                             ContentState.createFromBlockArray(\n                                                     convertFromHTML(c)\n                                                   )\n                                            ));\n}\nconst save = () => {\nconst rawContentState = convertToRaw(content.getCurrentContent());\nconst markup = draftToHtml(\n  rawContentState\n);\n let newObject = { \"authors\": currentChapter.authors,\n                   \"content\": markup };\ntextToClipboard(JSON.stringify(newObject, null, \" \"));\nwindow.location.href = git+currentFile;\n}\nconst textToClipboard = (text) => {\n    var dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n}\n   return  (<div className=\"row\"><div className=\"col-xl-2\">{mybook.length > 0 && bookTOC}</div><div className=\"col-xl-8\"><div><button onClick={toggleEdit}>{ edit ? 'Never Mind' : 'Improve this Doc' }</button></div>\n  { currentChapter && !edit && (<div><span> Author: {currentChapter.authors}</span><p><div dangerouslySetInnerHTML={{__html: currentChapter.content}} /></p></div>) }\n   { currentChapter && edit && (<div><Editor editorState={content} wrapperClassName=\"demo-wrapper\" editorClassName=\"demo-editor\" onEditorStateChange={onEditorStateChange} /><button onClick={save}>Save</button></div>) }\n  </div></div>);\n}\nexport default Book;","import {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './About';\nimport Books from './Books';\nimport Book from './Book';\nimport { baseUrl } from './constants';\nconst MainRouter = ()=>{\nreturn  (<Switch>\n                 <Route path={`${baseUrl}/about`}>\n                   <About />\n                 </Route>\n                  <Route path={`${baseUrl}/book/:bookId/:chapterId`}>\n                 <Book />\n                  </Route>\n                <Route path={`${baseUrl}/book/:bookId`}>\n                 <Book />\n                  </Route>\n                 <Route path={`${baseUrl}/books`}>\n                   <Books />\n                 </Route>\n                 <Route path={baseUrl}>\n                  <Books />\n                    </Route>\n                  <Route path=\"/\">\n                   <Books />\n                  </Route>\n               </Switch>);\n               }\nexport default MainRouter;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport MainRouter from './MainRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <div className=\"container-fluid\">\n        <MainRouter />\n        </div>\n      </div>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}