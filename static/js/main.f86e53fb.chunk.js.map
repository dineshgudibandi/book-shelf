{"version":3,"sources":["NavBar.js","About.js","Books.js","constants.js","Book.js","MainRouter.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","About","Books","useRouteMatch","useState","books","setBooks","useEffect","fetch","then","res","json","result","error","bookShelf","map","book","Card","style","width","Body","Title","name","Text","description","to","pathname","slug","state","length","Book","params","useParams","console","log","location","useLocation","chapter","currentChapter","setCurrentChapter","mybook","setMybook","bookTOC","defaultActiveKey","authors","dangerouslySetInnerHTML","__html","content","MainRouter","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f86e53fb.chunk.js","sourcesContent":["import { Nav, Navbar, Form,FormControl,Button   } from 'react-bootstrap';\nconst NavBar = () => {\n      return  (\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Library</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/books\">Books</Nav.Link>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-light\">Search</Button>\n          </Form>\n        </Navbar>)\n}\nexport default NavBar;","const About = () => {\n  return (<h2>About</h2>);\n}\nexport default About;","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { Card,Button } from 'react-bootstrap';\nimport { bookShelfAPI } from './constants';\nconst Books = () => {\n  let match = useRouteMatch();\n  const [books,setBooks] = useState([]);\nuseEffect(() => {\n\nfetch(bookShelfAPI)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setBooks(result);\n        },\n        (error) => {\n\n        }\n      )\n  },[]);\nconst bookShelf = books.map((book) =>\n        <Card style={{ width: '18rem' }} key={book.slug} >\n          <Card.Body>\n            <Card.Title>{book.name}</Card.Title>\n            <Card.Text>\n             {book.description}\n            </Card.Text>\n            <Button><Link to={{ pathname:`/book/${book.slug}`, state:{book}}}>\n                                                Read\n                                                </Link></Button>\n          </Card.Body>\n        </Card>\n    );\n  return (\n    <div>\n      <h2>Books</h2>\n      {books.length > 0 && bookShelf}\n    </div>\n  );\n}\nexport default Books;","export const bookShelfAPI = 'https://raw.githubusercontent.com/dineshgudibandi/book-shelf/main/book-shelf.json';","import { useState, useEffect } from 'react';\nimport parse from 'html-react-parser';\nimport {\n  useLocation,\n  useRouteMatch,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport { Nav } from 'react-bootstrap';\n\nconst Book = () => {\n  const params = useParams();\n  console.log(params);\n  const location = useLocation()\n  const book = location.state?.book;\n  const chapter = location.state?.chapter;\n  const [currentChapter,setCurrentChapter] = useState([]);\n  let match = useRouteMatch();\n   const [mybook,setMybook] = useState([]);\n useEffect(() => {\n  if(book){\n     fetch(book.location)\n       .then(res => res.json())\n       .then(\n         (result) => {\n           setMybook(result);\n               fetch(result[0].location)\n                            .then(res => res.json())\n                            .then(\n                              (result) => {\n                                setCurrentChapter(result);\n                              },\n                              (error) => {\n\n                              }\n                            )\n         },\n         (error) => {\n\n         }\n       )\n       }\n   },[]);\n    useEffect(() => {\n             if(chapter){  fetch(chapter.location)\n                 .then(res => res.json())\n                 .then(\n                   (result) => {\n                     setCurrentChapter(result);\n                   },\n                   (error) => {\n\n                   }\n                 )\n                 }\n      },[chapter]);\n   const bookTOC = mybook.map((chapter) =>\n<Nav defaultActiveKey=\"#\" className=\"flex-column\" key={chapter.slug} >\n  <Link to={{ pathname:`/book/${book.slug}/${chapter.slug}`, state:{chapter,book}}}>\n                                                                         {chapter.name}\n                                                                         </Link>\n</Nav>);\n  return  (<div className=\"row\"><div className=\"col-xl-2\">{mybook.length > 0 && bookTOC}</div><div className=\"col-xl-8\">{ currentChapter && <div><span> Author: {currentChapter.authors}</span><p><div dangerouslySetInnerHTML={{__html: currentChapter.content}} /></p></div> } </div></div>);\n}\nexport default Book;","import {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './About';\nimport Books from './Books';\nimport Book from './Book';\n\nconst MainRouter = ()=>{\nreturn  (<Switch>\n                 <Route path=\"/about\">\n                   <About />\n                 </Route>\n                  <Route path={`/book/:bookId/:chapterId`}>\n                 <Book />\n                  </Route>\n                <Route path={`/book/:bookId`}>\n                 <Book />\n                  </Route>\n                 <Route path=\"/books\">\n                   <Books />\n                 </Route>\n                  <Route path=\"/\">\n                   <Books />\n                  </Route>\n               </Switch>);\n               }\nexport default MainRouter;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport MainRouter from './MainRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <div className=\"container-fluid\">\n        <MainRouter />\n        </div>\n      </div>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}